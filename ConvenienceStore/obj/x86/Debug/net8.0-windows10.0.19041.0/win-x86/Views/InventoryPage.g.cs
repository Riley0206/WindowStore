#pragma checksum "D:\Windows\WindowStore\ConvenienceStore\Views\InventoryPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "D5B20D8C1756221431ED0992D21FF116514EBCEB2E3EC2BA66EFED04300D1D56"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConvenienceStore.Views
{
    partial class InventoryPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_SelectedItem(global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Documents_Run_Text(global::Microsoft.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class InventoryPage_obj14_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IInventoryPage_Bindings
        {
            private global::ConvenienceStore.Models.Category dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TextDisabled = false;

            public InventoryPage_obj14_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 53 && columnNumber == 36)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // Views\InventoryPage.xaml line 53
                        this.obj14 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target));
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj14.Target as global::Microsoft.UI.Xaml.Controls.TextBlock);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::ConvenienceStore.Models.Category>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IInventoryPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ConvenienceStore.Models.Category>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ConvenienceStore.Models.Category obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_CategoryName(obj.CategoryName, phase);
                    }
                }
            }
            private void Update_CategoryName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InventoryPage.xaml line 53
                    if (!isobj14TextDisabled)
                    {
                        if ((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.TextBlock) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.TextBlock), obj, null);
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class InventoryPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IInventoryPage_Bindings
        {
            private global::ConvenienceStore.Views.InventoryPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ListView obj2;
            private global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj3;
            private global::Microsoft.UI.Xaml.Documents.Run obj6;
            private global::Microsoft.UI.Xaml.Documents.Run obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ItemsSourceDisabled = false;
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj3SelectedItemDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;

            private InventoryPage_obj1_BindingsTracking bindingsTracking;

            public InventoryPage_obj1_Bindings()
            {
                this.bindingsTracking = new InventoryPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 41 && columnNumber == 17)
                {
                    isobj2ItemsSourceDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 21)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 77 && columnNumber == 21)
                {
                    isobj3SelectedItemDisabled = true;
                }
                else if (lineNumber == 110 && columnNumber == 30)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 30)
                {
                    isobj7TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\InventoryPage.xaml line 40
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 3: // Views\InventoryPage.xaml line 74
                        this.obj3 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 6: // Views\InventoryPage.xaml line 110
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 7: // Views\InventoryPage.xaml line 112
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IInventoryPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ConvenienceStore.Views.InventoryPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ConvenienceStore.Views.InventoryPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::ConvenienceStore.ViewModels.InventoryViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Categories(obj.Categories, phase);
                        this.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, phase);
                        this.Update_ViewModel_SelectedProduct(obj.SelectedProduct, phase);
                        this.Update_ViewModel_CurrentPage(obj.CurrentPage, phase);
                        this.Update_ViewModel_TotalPages(obj.TotalPages, phase);
                    }
                }
            }
            private void Update_ViewModel_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Categories(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InventoryPage.xaml line 40
                    if (!isobj2ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DisplayedProducts(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_DisplayedProducts(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InventoryPage.xaml line 74
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedProduct(global::ConvenienceStore.Models.Product obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InventoryPage.xaml line 74
                    if (!isobj3SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_SelectedItem(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CurrentPage(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InventoryPage.xaml line 110
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj6, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_TotalPages(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InventoryPage.xaml line 112
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj7, obj.ToString(), null);
                    }
                }
            }
            private void UpdateTwoWay_3_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedProduct = (global::ConvenienceStore.Models.Product)this.obj3.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class InventoryPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<InventoryPage_obj1_Bindings> weakRefToBindingObj; 

                public InventoryPage_obj1_BindingsTracking(InventoryPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<InventoryPage_obj1_Bindings>(obj);
                }

                public InventoryPage_obj1_Bindings TryGetBindingObject()
                {
                    InventoryPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Categories(null);
                    UpdateChildListeners_ViewModel_DisplayedProducts(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InventoryPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::ConvenienceStore.ViewModels.InventoryViewModel obj = sender as global::ConvenienceStore.ViewModels.InventoryViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Categories(obj.Categories, DATA_CHANGED);
                                bindings.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedProduct(obj.SelectedProduct, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentPage(obj.CurrentPage, DATA_CHANGED);
                                bindings.Update_ViewModel_TotalPages(obj.TotalPages, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Categories":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Categories(obj.Categories, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DisplayedProducts":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedProduct":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedProduct(obj.SelectedProduct, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentPage":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentPage(obj.CurrentPage, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalPages":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TotalPages(obj.TotalPages, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::ConvenienceStore.ViewModels.InventoryViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::ConvenienceStore.ViewModels.InventoryViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Categories(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InventoryPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Categories(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    InventoryPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category> cache_ViewModel_Categories = null;
                public void UpdateChildListeners_ViewModel_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Category> obj)
                {
                    if (obj != cache_ViewModel_Categories)
                    {
                        if (cache_ViewModel_Categories != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Categories).PropertyChanged -= PropertyChanged_ViewModel_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Categories).CollectionChanged -= CollectionChanged_ViewModel_Categories;
                            cache_ViewModel_Categories = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Categories = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Categories;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_DisplayedProducts(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InventoryPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_DisplayedProducts(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    InventoryPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> cache_ViewModel_DisplayedProducts = null;
                public void UpdateChildListeners_ViewModel_DisplayedProducts(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj)
                {
                    if (obj != cache_ViewModel_DisplayedProducts)
                    {
                        if (cache_ViewModel_DisplayedProducts != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_DisplayedProducts).PropertyChanged -= PropertyChanged_ViewModel_DisplayedProducts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_DisplayedProducts).CollectionChanged -= CollectionChanged_ViewModel_DisplayedProducts;
                            cache_ViewModel_DisplayedProducts = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_DisplayedProducts = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_DisplayedProducts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_DisplayedProducts;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::CommunityToolkit.WinUI.UI.Controls.DataGrid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\InventoryPage.xaml line 40
                {
                    this.CategoryList = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.CategoryList).SelectionChanged += this.CategoryList_SelectionChanged;
                }
                break;
            case 3: // Views\InventoryPage.xaml line 74
                {
                    this.ProductsDataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 4: // Views\InventoryPage.xaml line 104
                {
                    global::Microsoft.UI.Xaml.Controls.Button element4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element4).Click += this.PreviousPage_Click;
                }
                break;
            case 5: // Views\InventoryPage.xaml line 115
                {
                    global::Microsoft.UI.Xaml.Controls.Button element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element5).Click += this.NextPage_Click;
                }
                break;
            case 8: // Views\InventoryPage.xaml line 68
                {
                    global::Microsoft.UI.Xaml.Controls.Button element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element8).Click += this.AddProduct_Click;
                }
                break;
            case 9: // Views\InventoryPage.xaml line 69
                {
                    global::Microsoft.UI.Xaml.Controls.Button element9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element9).Click += this.UpdateQuantity_Click;
                }
                break;
            case 10: // Views\InventoryPage.xaml line 70
                {
                    global::Microsoft.UI.Xaml.Controls.Button element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element10).Click += this.DeleteProduct_Click;
                }
                break;
            case 11: // Views\InventoryPage.xaml line 62
                {
                    this.SearchBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 12: // Views\InventoryPage.xaml line 63
                {
                    global::Microsoft.UI.Xaml.Controls.Button element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element12).Click += this.SearchButton_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\InventoryPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    InventoryPage_obj1_Bindings bindings = new InventoryPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 14: // Views\InventoryPage.xaml line 53
                {                    
                    global::Microsoft.UI.Xaml.Controls.TextBlock element14 = (global::Microsoft.UI.Xaml.Controls.TextBlock)target;
                    InventoryPage_obj14_Bindings bindings = new InventoryPage_obj14_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element14.DataContext);
                    element14.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element14, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element14, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

