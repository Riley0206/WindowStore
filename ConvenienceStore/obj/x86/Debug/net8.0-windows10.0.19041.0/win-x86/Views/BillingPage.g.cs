#pragma checksum "C:\Users\riple\Documents\GitHub\WindowStore\ConvenienceStore\Views\BillingPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "5470009DE59C41782291BE8E59B81A51ED944ECA7327A5AF7358F820E9C71956"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConvenienceStore.Views
{
    partial class BillingPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_SelectedItem(global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(global::Microsoft.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class BillingPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IBillingPage_Bindings
        {
            private global::ConvenienceStore.Views.BillingPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj2;
            private global::Microsoft.UI.Xaml.Controls.Button obj3;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj4;
            private global::Microsoft.UI.Xaml.Controls.Button obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ItemsSourceDisabled = false;
            private static bool isobj2SelectedItemDisabled = false;
            private static bool isobj3IsEnabledDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5IsEnabledDisabled = false;

            private BillingPage_obj1_BindingsTracking bindingsTracking;

            public BillingPage_obj1_Bindings()
            {
                this.bindingsTracking = new BillingPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 43 && columnNumber == 21)
                {
                    isobj2ItemsSourceDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 21)
                {
                    isobj2SelectedItemDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 17)
                {
                    isobj3IsEnabledDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 32)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 17)
                {
                    isobj5IsEnabledDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\BillingPage.xaml line 41
                        this.obj2 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    case 3: // Views\BillingPage.xaml line 61
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 4: // Views\BillingPage.xaml line 63
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 5: // Views\BillingPage.xaml line 65
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IBillingPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ConvenienceStore.Views.BillingPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ConvenienceStore.Views.BillingPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::ConvenienceStore.ViewModels.InventoryViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, phase);
                        this.Update_ViewModel_SelectedProduct(obj.SelectedProduct, phase);
                        this.Update_ViewModel_CurrentPage(obj.CurrentPage, phase);
                        this.Update_ViewModel_HasNextPage(obj.HasNextPage, phase);
                    }
                }
            }
            private void Update_ViewModel_DisplayedProducts(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_DisplayedProducts(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\BillingPage.xaml line 41
                    if (!isobj2ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedProduct(global::ConvenienceStore.Models.Product obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\BillingPage.xaml line 41
                    if (!isobj2SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_SelectedItem(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CurrentPage(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\BillingPage.xaml line 61
                    if (!isobj3IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj3, (global::System.Boolean)this.LookupConverter("GreaterThanOneConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // Views\BillingPage.xaml line 63
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_HasNextPage(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\BillingPage.xaml line 65
                    if (!isobj5IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj5, obj);
                    }
                }
            }
            private void UpdateTwoWay_2_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedProduct = (global::ConvenienceStore.Models.Product)this.obj2.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class BillingPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<BillingPage_obj1_Bindings> weakRefToBindingObj; 

                public BillingPage_obj1_BindingsTracking(BillingPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<BillingPage_obj1_Bindings>(obj);
                }

                public BillingPage_obj1_Bindings TryGetBindingObject()
                {
                    BillingPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_DisplayedProducts(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    BillingPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::ConvenienceStore.ViewModels.InventoryViewModel obj = sender as global::ConvenienceStore.ViewModels.InventoryViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedProduct(obj.SelectedProduct, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentPage(obj.CurrentPage, DATA_CHANGED);
                                bindings.Update_ViewModel_HasNextPage(obj.HasNextPage, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "DisplayedProducts":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DisplayedProducts(obj.DisplayedProducts, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedProduct":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedProduct(obj.SelectedProduct, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentPage":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentPage(obj.CurrentPage, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasNextPage":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_HasNextPage(obj.HasNextPage, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::ConvenienceStore.ViewModels.InventoryViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::ConvenienceStore.ViewModels.InventoryViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_DisplayedProducts(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    BillingPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_DisplayedProducts(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    BillingPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> cache_ViewModel_DisplayedProducts = null;
                public void UpdateChildListeners_ViewModel_DisplayedProducts(global::System.Collections.ObjectModel.ObservableCollection<global::ConvenienceStore.Models.Product> obj)
                {
                    if (obj != cache_ViewModel_DisplayedProducts)
                    {
                        if (cache_ViewModel_DisplayedProducts != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_DisplayedProducts).PropertyChanged -= PropertyChanged_ViewModel_DisplayedProducts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_DisplayedProducts).CollectionChanged -= CollectionChanged_ViewModel_DisplayedProducts;
                            cache_ViewModel_DisplayedProducts = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_DisplayedProducts = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_DisplayedProducts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_DisplayedProducts;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::CommunityToolkit.WinUI.UI.Controls.DataGrid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\BillingPage.xaml line 41
                {
                    this.ProductsDataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 3: // Views\BillingPage.xaml line 61
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.PreviousPage_Click;
                }
                break;
            case 5: // Views\BillingPage.xaml line 65
                {
                    global::Microsoft.UI.Xaml.Controls.Button element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element5).Click += this.NextPage_Click;
                }
                break;
            case 6: // Views\BillingPage.xaml line 35
                {
                    global::Microsoft.UI.Xaml.Controls.Button element6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element6).Click += this.AddBill_Click;
                }
                break;
            case 7: // Views\BillingPage.xaml line 36
                {
                    global::Microsoft.UI.Xaml.Controls.Button element7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element7).Click += this.UpdateBill_Click;
                }
                break;
            case 8: // Views\BillingPage.xaml line 37
                {
                    global::Microsoft.UI.Xaml.Controls.Button element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element8).Click += this.DeleteBill_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\BillingPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    BillingPage_obj1_Bindings bindings = new BillingPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

